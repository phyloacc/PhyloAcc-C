\name{run_model}
\alias{run_model}
\title{Run one chain of the PhyloAcc-C model}
\description{

Full detail on the PhyloAcc family of models is available at \url{https://phyloacc.github.io}.

}
\usage{
run_model(tree, alignment, trait_tbl=NULL, transition_matrix, stationary_distro,
          n_iter=10, inner_iter=500,
          prior_zr_1=0.5,
          Phi_prior=c(1.0, 5.0, 1.0, 5.0, 1.0, 1.0),
          prior_r2=c(5.0, 0.04),
          prior_r3=c(10.0, 0.2),
          prior_root=c(0.0, 1.0),
          prior_lv=c(0.0, 2.0),
          prior_lb2=c(0.0, 1.0),
          prior_lb3=c(0.0, 1.0),
          uniform_prior_lv=FALSE,
          verbose=FALSE)
}
\arguments{
\item{tree}{A single tree as read by the \code{\link[ape]{read.tree}} function.}
\item{alignment}{Nucleotide alignment in character matrix form (\code{'a'},\code{'c'},\code{'g'},\code{'t'},\code{'-'} permitted). Row names must match the \code{tip.labels} in \code{tree} e.g. as generated by \code{\link{sim_X}} or as loaded by \code{\link[ape]{read.dna}} when options \code{format="fasta"}, \code{as.matrix=T}, and  \code{as.character=T} are specified.}
\item{trait_tbl}{Data frame containing a \code{NAME} column, whose values match  \code{tip.labels} in \code{tree}, and a \code{Y} column, giving the trait values observed in extant species.}
\item{transition_matrix}{A rate matrix specifying the nucleotide substitution process. Index order is a c g t.}
\item{stationary_distro}{Vector giving the stationary distribution associated with the nucleotide substitution process. }
\item{n_iter}{The number of iterations to run the MCMC algorithm.}
\item{inner_iter}{The number times to propose updates to latent trait and variance rate parameters per complete MCMC iteration; this step is relatively fast so the default value is high.}
\item{prior_zr_1}{Prior probability that latent conservation state at the root is 1 (background/neutral) as opposed to 2 (conserved).}
\item{Phi_prior}{Length 6 vector specifying 3 pairs of (shape1, shape2) parameters for the Beta priors on entries \eqn{c}, \eqn{a}, and \eqn{b} of the \eqn{Phi} matrix.}
\item{prior_r2}{Vector giving the shape and scale of the gamma prior on the nucleotide rate multiplier for the conserved state (\eqn{r_2}).}
\item{prior_r3}{Vector giving the shape and scale of the gamma prior on the nucleotide rate multiplier for the accelerated state (\eqn{r_3})}
\item{prior_root}{Vector giving the mean and sd of the normal prior on the value of the trait at the root node (\eqn{y_R}).}
\item{prior_lv}{Vector giving the mean and sd of the prior on the logarithm of the background variance rate for the trait (\eqn{\sigma^2}). N.B. this parameter is not used for inference if you choose a uniform prior by setting \code{uniform_prior_lv = TRUE}.}
\item{prior_lb2}{Vector giving the mean and sd of the prior on the logarithm of the variance rate multiplier for the conserved state (\eqn{\beta_2}).}
\item{prior_lb3}{Vector giving the mean and sd of the prior on the logarithm of the variance rate multiplier for the accelerated state (\eqn{\beta_3}).}
\item{uniform_prior_lv}{When \code{TRUE} all values of baseline variance \eqn{\sigma^2} are equally likely, and variance rate is constrained using \eqn{\beta_2} and \eqn{\beta_3} only.}
\item{verbose}{When \code{TRUE} report reaching every 100th MCMC iteration to the console.}
}
\value{
A list containing the \code{mcmc_trace} (for reporting results and checking convergence) and \code{mcmc_context} (containing some phylogenetic information about the run).
}
\examples{

\dontrun{
# load a tree
tree = ape::read.tree("mammal_tree.txt")

# specify a substitution process
Q <- matrix(
  c(-1.075162,  0.186970,  0.696268,  0.191923,
     0.181082, -0.873473,  0.255492,  0.436899,
     0.674340,  0.255493, -1.164645,  0.234813,
     0.191924,  0.451108,  0.242449, -0.885481),
  nrow=4, ncol=4)

PI <- c(0.246000, 0.254000, 0.254000, 0.246000)

# read trait data from a tab separated data file
trait_tbl = read.csv("mammal_data.tsv", sep="\t")

# read an alignment from a FASTA file
alignment = ape::read.dna("cne.fasta", format="fasta", as.matrix=T, as.character=T)

# make analysis repeatable by setting a seed
set.seed(1)

# run MCMC for 5000 iterations
mcmc_out = pac3::run_model(verbose=T, tree=tree, alignment=alignment, trait_tbl=trait_tbl,
                            transition_matrix=Q, stationary_distro=PI, n_iter=5000,
                            inner_iter=500, Phi_prior=c(1.0, 1.0, 1.0, 1.0, 1.0, 1.0))

# report posterior mean of log(beta3:beta2), treating first 1000 iterations as burnin
v_trace = mcmc_out$mcmc_trace$v_trace[-(1:1000),]
mean(v_trace[,3]-v_trace[,2])

}
}
